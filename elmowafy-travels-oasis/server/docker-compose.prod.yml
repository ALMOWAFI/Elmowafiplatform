version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elmowafy-backend
    restart: unless-stopped
    env_file: .env
    environment:
      - NODE_ENV=production
      - PORT=5000
      - MONGODB_URI=mongodb://mongo:27017/elmowafy
    ports:
      - "5000:5000"
    depends_on:
      - mongo
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - elmowafy-network

  mongo:
    image: mongo:6.0
    container_name: elmowafy-mongo
    restart: unless-stopped
    env_file: .env
    environment:
      - MONGO_INITDB_DATABASE=elmowafy
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: ["--wiredTigerCacheSizeGB=1.5"]
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/elmowafy --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - elmowafy-network

  mongo-express:
    image: mongo-express:1.0
    container_name: elmowafy-mongo-express
    restart: unless-stopped
    env_file: .env
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD}
    depends_on:
      - mongo
    ports:
      - "8081:8081"
    networks:
      - elmowafy-network

  nginx:
    image: nginx:alpine
    container_name: elmowafy-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./nginx/logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - elmowafy-network

volumes:
  mongo-data:
    driver: local

networks:
  elmowafy-network:
    driver: bridge
