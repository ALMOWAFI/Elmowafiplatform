# Docker Compose for Elmowafiplatform Development
version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: elmowafiplatform-backend
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=development
      - PYTHONUNBUFFERED=1
      - PORT=8001
      - DATABASE_URL=sqlite:///./data/family_platform.db
      - REDIS_HOST=redis
      - AI_SERVICES_ENABLED=true
    volumes:
      - ./data:/app/data
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - elmowafiplatform-dev
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8001/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: elmowafiplatform-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - elmowafiplatform-dev
    command: redis-server --appendonly yes

  # Frontend React App  
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: elmowafiplatform-frontend
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
      - VITE_API_URL=http://backend:8001
      - VITE_API_URL_EXTERNAL=http://localhost:8001
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - elmowafiplatform-dev
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5173 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  redis_data:
    driver: local

networks:
  elmowafiplatform-dev:
    driver: bridge