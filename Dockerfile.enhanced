FROM python:3.12-slim AS production

# Set environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1
ENV PORT=8000

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    curl \
    sqlite3 \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgthread-2.0-0 \
    libgtk-3-0 \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libatlas-base-dev \
    gfortran \
    && rm -rf /var/lib/apt/lists/*

# Create application directory
WORKDIR /app

# Copy enhanced requirements first for better Docker layer caching
COPY backend/requirements-enhanced.txt ./requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/uploads && \
    mkdir -p /app/data && \
    mkdir -p /app/logs && \
    mkdir -p /app/memories && \
    mkdir -p /app/output

# Set proper permissions
RUN chmod +x /app && \
    chmod -R 755 /app/uploads && \
    chmod -R 755 /app/data && \
    chmod -R 755 /app/memories && \
    chmod -R 755 /app/output

# Create monitoring directory
RUN mkdir -p /app/monitoring

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8000/api/v1/health || exit 1

# Start the enhanced application
ENV APP_MODULE=main:app
CMD ["/bin/sh", "-c", "python -m uvicorn ${APP_MODULE} --host 0.0.0.0 --port 8000 --reload"]
